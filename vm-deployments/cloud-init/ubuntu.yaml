#cloud-config
# Cloud-init configuration for Ubuntu VM on Harvester
# This configuration will be applied during the first boot

# Set hostname
hostname: ${hostname}
fqdn: ${hostname}.local

# Update and upgrade packages
package_update: true
package_upgrade: true

# Install essential packages
packages:
  - curl
  - wget
  - git
  - htop
  - vim
  - ufw
  - fail2ban
  - unattended-upgrades
  - apt-transport-https
  - ca-certificates
  - gnupg
  - lsb-release

# Create users
users:
  - name: ubuntu
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: sudo, docker
    shell: /bin/bash
    lock_passwd: true
    %{ if ssh_public_key != "" }
    ssh_authorized_keys:
      - ${ssh_public_key}
    %{ endif }

# SSH configuration
ssh_pwauth: false
ssh_authorized_keys:
  %{ if ssh_public_key != "" }
  - ${ssh_public_key}
  %{ endif }

# Configure automatic security updates
write_files:
  - path: /etc/apt/apt.conf.d/20auto-upgrades
    content: |
      APT::Periodic::Update-Package-Lists "1";
      APT::Periodic::Unattended-Upgrade "1";
    owner: root:root
    permissions: '0644'

  - path: /etc/apt/apt.conf.d/50unattended-upgrades
    content: |
      Unattended-Upgrade::Allowed-Origins {
          "$${distro_id}:$${distro_codename}";
          "$${distro_id}:$${distro_codename}-security";
          "$${distro_id}ESMApps:$${distro_codename}-apps-security";
          "$${distro_id}ESM:$${distro_codename}-infra-security";
      };
      Unattended-Upgrade::AutoFixInterruptedDpkg "true";
      Unattended-Upgrade::MinimalSteps "true";
      Unattended-Upgrade::Remove-Unused-Dependencies "true";
      Unattended-Upgrade::Automatic-Reboot "false";
    owner: root:root
    permissions: '0644'

  - path: /etc/fail2ban/jail.local
    content: |
      [DEFAULT]
      bantime = 3600
      findtime = 600
      maxretry = 3
      
      [sshd]
      enabled = true
      port = ssh
      filter = sshd
      logpath = /var/log/auth.log
      maxretry = 3
    owner: root:root
    permissions: '0644'

# Configure firewall
runcmd:
  # Configure UFW firewall
  - ufw default deny incoming
  - ufw default allow outgoing
  - ufw allow ssh
  - ufw --force enable
  
  # Enable and start fail2ban
  - systemctl enable fail2ban
  - systemctl start fail2ban
  
  # Install Docker (optional - comment out if not needed)
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
  - apt-get update
  - apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
  - systemctl enable docker
  - systemctl start docker
  - usermod -aG docker ubuntu
  
  # Set timezone (adjust as needed)
  - timedatectl set-timezone UTC
  
  # Enable automatic security updates
  - systemctl enable unattended-upgrades

# Reboot after cloud-init completes to ensure all changes take effect
power_state:
  delay: now
  mode: reboot
  message: "Rebooting after cloud-init completion"
  timeout: 30
  condition: true

# Final message
final_message: "Ubuntu VM setup completed successfully! SSH access available for user 'ubuntu'."